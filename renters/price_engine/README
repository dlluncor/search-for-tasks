
## Generating renter's model.

# Run tests.
./test.sh

# Generate a CSV file so we can scrape the renters insurance data from Farmers.
python renters_to_csv.py

# Generate an offline model.
python gen_offline_model.py

# Score an example with the serving scorer.
python renters_serving_scorer.py


## Set Up VNC on Ubuntu
This can be done. Following are the steps to setup the GUI

In security group open port 5901. Then ssh to the server instance. Run following commands to install ui and vnc server:
```
sudo apt-get update
sudo apt-get install xfce4
sudo apt-get install vnc4server
```
Then run following commands and enter the login password for vnc connection:

```
vncserver
vncserver -kill :1
```

```
mv ~/.vnc/xstartup ~/.vnc/xstartup.default
```
```
vim ~/.vnc/xstartup
sudo chmod +x ~/.vnc/xstartup
```
```
#!/bin/bash
xrdb $HOME/.Xresources
startxfce4 &
```

```
sudo apt-get install build-essential
sudo apt-get install ruby ruby-dev unzip git
```


vncserver
In the vnc client, give public DNS plus ":1" (e.g. www.example.com:1). Enter the vnc login password. Make sure to use a normal connection. Don't use the key files.

Additional guide available here: http://www.serverwatch.com/server-tutorials/setting-up-vnc-on-ubuntu-in-the-amazon-ec2-Page-3.html

Mac VNC client can be downloaded from here: http://www.realvnc.com/download/get/1286/


# Install Google chrome
```
$ wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
$ sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
$ sudo apt-get update
$ sudo apt-get install google-chrome-stable
```


```
sudo gem install watir-webdriver
```

# Install chromedriver
```
#http://chromedriver.storage.googleapis.com/index.html
wget http://chromedriver.storage.googleapis.com/2.18/chromedriver_linux64.zip
unzip chromedriver_linux64.zip
sudo mv chromedriver /usr/local/bin/
```

```
git clone https://github.com/bonjoylabs/data-mining.git
```

connect to server with vnc viewer on port 5901. Need to open 5901 port on aws security group.


52.88.102.146:5901 special_crosses_renters_0921212303_0.csv # 1 pass done
52.89.84.183:5901   no_crosses_renters_0921212303_0.csv     # running missed samples # fail/run
52.88.233.117:5901  full_crosses_renters_0921212303_0.csv   #
52.88.213.154:5901  full_crosses_renters_0921212303_1.csv   #
52.89.136.97:5901   full_crosses_renters_0921212303_2.csv   # running missed samples
52.11.249.176:5901  full_crosses_renters_0921212303_3.csv   # running missed samples
52.89.169.220:5901  full_crosses_renters_0921212303_4.csv   # running missed samples
52.26.146.251:5901  full_crosses_renters_0921212303_5.csv  *# running missed samples
52.89.147.43:5901   full_crosses_renters_0921212303_6.csv   # running missed samples
52.25.4.192:5901    full_crosses_renters_0921212303_7.csv   #
52.88.57.201:5901   full_crosses_renters_0921212303_8.csv  *# running missed samples
52.88.93.86:5901    full_crosses_renters_0921212303_9.csv   # running missed samples
52.88.255.164:5901  full_crosses_renters_0921212303_10.csv  #
52.88.163.127:5901  full_crosses_renters_0921212303_11.csv  #
50.112.137.231:5901 full_crosses_renters_0921212303_12.csv  #
52.27.163.93:5901   full_crosses_renters_0921212303_13.csv  #
52.89.130.131:5901  full_crosses_renters_0921212303_14.csv *#
52.89.150.0:5901    full_crosses_renters_0921212303_15.csv  #
